#!/bin/bash

action=$1
shift

function usage {
  echo " Customized repeat:"
  echo "   repeat ITEM "
  echo "     mark an item complete then re-enter it"
  echo "   repeat ITEM DAYS"
  echo "     mark an item as complete then re-enter with updating threshold"
  echo ""
  exit
}

# make sure we have an item number
ITEM=$1
echo $ITEM
if ! [[ "$ITEM" =~ ^[0-9]+$ ]]; then
echo "Error! Usage:"
usage
exit
fi

DAYS=$2

[ "$action" = "usage" ] && usage


pattern=" t:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}" # not enforcing any particular format

function add {
  item=$1
  threshold=$2

  flag=`sed -e "$item!d" "$TODO_FILE" | grep "$pattern"`

  if [ -z "$flag" ]; then
    $TODO_FULL_SH append $item "t:"`gdate -d "$threshold" +%F`
  else
    echo "ERROR: #$item already has a date threshold - use \`mv\` instead"
  fi
}

function remove {
  item=$1
  task=`sed -e "$item!d" \
      -e "s/^[0-9]* //" \
      -e "s/^([A-Z])* //" \
      -e "s/$pattern//" \
      "$TODO_FILE"` # remove item number, priority and threshold
  $TODO_FULL_SH replace $item "$task" # NB: retains priority
}

function replace {
  item=$1
  threshold=$2
  remove $item
  add $item "$threshold"
}

task=`sed -e "$ITEM!d" \
       -e "s/^[0-9]* //" \
       -e "s/^([A-Z])* //" \
       "$TODO_FILE"`

if [[ "$task" != "" ]] ; then
  $TODO_FULL_SH do "$ITEM"
  $TODO_FULL_SH add "$task"
  if [[ "$DAYS" != "" ]]; then
    replace $ITEM "$DAYS"
  fi
fi